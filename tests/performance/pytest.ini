[pytest]
# Performance testing configuration

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for categorizing tests
markers =
    performance: Performance tests
    benchmark: Benchmark tests
    load: Load tests
    stress: Stress tests
    resource: Resource monitoring tests
    slow: Slow running tests
    concurrent: Concurrent user tests
    memory: Memory testing
    cpu: CPU testing
    database: Database performance tests
    network: Network performance tests

# Async support
asyncio_mode = auto

# Timeout for performance tests (in seconds)
timeout = 600
timeout_method = thread

# Benchmark configuration
benchmark_only = false
benchmark_autosave = true
benchmark_save = .benchmarks
benchmark_max_time = 60
benchmark_min_rounds = 5
benchmark_calibration_precision = 10
benchmark_warmup = true
benchmark_disable_gc = true

# Parallel execution
addopts = 
    -v
    --tb=short
    --strict-markers
    --benchmark-columns=min,max,mean,stddev,median,iqr,outliers,rounds
    --benchmark-group-by=group
    --benchmark-sort=mean
    --benchmark-compare
    --benchmark-histogram

# Coverage options (optional)
# --cov=app
# --cov-report=html
# --cov-report=term-missing

# Custom options for performance tests
performance_baseline_file = performance_baselines.json
performance_regression_threshold = 10.0
performance_report_format = html

# Resource limits
max_memory_mb = 2048
max_cpu_percent = 90
max_open_files = 1000

# Network timeouts
request_timeout = 30
connection_timeout = 10

# Database settings
db_connection_pool_size = 20
db_timeout = 5

# Load test defaults
default_users = 10
default_spawn_rate = 1
default_run_time = 60