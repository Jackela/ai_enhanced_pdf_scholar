# ============================================================================
# AI Enhanced PDF Scholar - Simplified Pre-commit Configuration
# Core quality checks only - focused on essential standards
# ============================================================================

repos:
  # ============================================================================
  # Essential File Checks
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Basic file format checks
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=2000]  # 2MB limit (increased for PDFs/docs)

      # Python syntax validation
      - id: check-ast
      - id: debug-statements

      # Exclude problematic files from YAML/JSON checks
      - id: check-yaml
        args: [--allow-multiple-documents]
        exclude: |
          (?x)^(
            k8s/helm/.*\.yaml|
            k8s/manifests/.*\.yaml|
            k8s/resources\.yaml|
            \.github/workflows/disabled/.*\.yml|
            frontend/\.github/workflows/.*\.yml
          )$
      
      - id: check-json
        exclude: |
          (?x)^(
            monitoring/.*-dashboard\.json|
            .*_service_report\.json|
            bandit-report\.json|
            frontend/tsconfig\.json
          )$

  # ============================================================================
  # Python Code Quality (Essential Only)  
  # ============================================================================
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        args: [--line-length=88]
        files: ^(src/|backend/|tests/|scripts/).*\.py$

  - repo: https://github.com/pycqa/isort  
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        files: ^(src/|backend/|tests/|scripts/).*\.py$

  # ============================================================================
  # Relaxed Security Checks
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Only check for actual private keys, not documentation examples
      - id: detect-private-key
        exclude: |
          (?x)^(
            GITHUB_SECRETS_GUIDE\.md|
            k8s/manifests/secrets\.yaml|
            docs/.*\.md|
            .*README.*\.md
          )$

# ============================================================================
# Configuration
# ============================================================================

# Update to modern stage names
default_stages: [pre-commit, pre-push]

# Language versions
default_language_version:
  python: python3.11

# Minimum version
minimum_pre_commit_version: 3.6.0

# CI skip list - skip complex checks in CI for speed
ci:
  skip: []
  autofix_prs: true
  autoupdate_schedule: weekly

# ============================================================================
# Usage Notes
# ============================================================================
# This simplified configuration focuses on:
# 1. Essential file format issues
# 2. Python syntax and basic formatting  
# 3. Basic security (real private keys only)
# 4. Large file prevention
#
# Removed from original config:
# - Complex YAML/JSON validation for config files
# - Test file naming enforcement (utility files are OK)
# - AWS credential detection (not used in this project)
# - Frontend linting (handled separately)
# - Documentation linting (too strict for development)
# - Comprehensive security scanning (too noisy)
# ============================================================================