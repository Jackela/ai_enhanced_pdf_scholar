{
  "test_performance_metrics": {
    "measurement_timestamp": "2025-08-09T05:00:00Z",
    "execution_summary": {
      "total_execution_time": 94.49,
      "parallel_efficiency": {
        "workers_used": 8,
        "theoretical_sequential_time": 755.92,
        "actual_parallel_time": 94.49,
        "speedup_factor": 8.0,
        "efficiency_percentage": 100.0
      }
    },
    "suite_performance": {
      "unit_tests": {
        "total_time": 49.81,
        "tests_per_second": 1.87,
        "average_test_time": 0.54,
        "performance_grade": "B+",
        "bottlenecks": [
          {
            "test": "test_hash_service_with_large_content",
            "time": 44.11,
            "percentage_of_suite": 88.5,
            "issue": "Large content processing without optimization"
          }
        ]
      },
      "integration_tests": {
        "total_time": 18.91,
        "tests_per_second": 4.39,
        "average_test_time": 0.23,
        "performance_grade": "A-",
        "notes": "Good performance despite many failures"
      },
      "rag_module_tests": {
        "total_time": 4.76,
        "tests_per_second": 0,
        "average_test_time": "N/A",
        "performance_grade": "F",
        "notes": "Blocked by import errors, no actual test execution"
      },
      "security_tests": {
        "total_time": 20.96,
        "tests_per_second": 10.01,
        "average_test_time": 0.10,
        "performance_grade": "A",
        "notes": "Excellent individual test performance"
      }
    },
    "performance_outliers": {
      "slowest_tests": [
        {
          "test": "test_hash_service_with_large_content",
          "time": 44.11,
          "suite": "unit_tests",
          "optimization_potential": "HIGH - implement streaming/chunked hashing"
        },
        {
          "test": "test_multiple_files_hashing",
          "time": 0.049,
          "suite": "unit_tests",
          "optimization_potential": "LOW - reasonable for file I/O"
        },
        {
          "test": "test_service_logging_integration",
          "time": 0.047,
          "suite": "unit_tests",
          "optimization_potential": "MEDIUM - optimize logging setup"
        }
      ],
      "fastest_tests": [
        {
          "test": "test_model_equality",
          "time": 0.002,
          "suite": "unit_tests"
        },
        {
          "test": "test_service_dependency_injection",
          "time": 0.002,
          "suite": "unit_tests"
        },
        {
          "test": "test_imports",
          "time": 0.008,
          "suite": "unit_tests"
        }
      ]
    },
    "resource_utilization": {
      "memory_efficient_tests": [
        "Model creation and validation tests",
        "Import validation tests",
        "Basic service instantiation tests"
      ],
      "memory_intensive_tests": [
        "Large content hashing tests",
        "File I/O operations",
        "Database transaction tests"
      ],
      "cpu_intensive_tests": [
        "Hash calculation tests",
        "Content normalization tests",
        "Large data processing tests"
      ]
    },
    "test_optimization_recommendations": [
      {
        "priority": "HIGH",
        "area": "Hash Service Performance",
        "recommendation": "Implement streaming hash calculation for large content to avoid memory issues and reduce execution time from 44s to <1s",
        "estimated_improvement": "95% reduction in execution time"
      },
      {
        "priority": "MEDIUM",
        "area": "Parallel Execution",
        "recommendation": "Optimize test fixtures and database setup to reduce inter-test dependencies",
        "estimated_improvement": "20-30% overall suite improvement"
      },
      {
        "priority": "LOW",
        "area": "Test Organization",
        "recommendation": "Group similar test types to improve cache locality and reduce setup overhead",
        "estimated_improvement": "5-10% improvement"
      }
    ],
    "historical_comparison": {
      "baseline_available": false,
      "notes": "No previous performance baselines available for comparison"
    },
    "ci_cd_impact": {
      "current_timeout_risk": "MEDIUM",
      "tests_approaching_timeout": [
        "test_hash_service_with_large_content (44s approaching 60s limit)"
      ],
      "recommended_timeout_adjustments": {
        "unit_tests": "Increase from 60s to 120s OR fix performance issue",
        "integration_tests": "Current 300s is adequate",
        "security_tests": "Current 60s is adequate"
      }
    }
  }
}