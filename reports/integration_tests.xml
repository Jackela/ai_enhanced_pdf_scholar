<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="20" failures="7" skipped="0" tests="62" time="18.890" timestamp="2025-08-09T14:57:48.746965+10:00" hostname="Jackela"><testcase classname="tests.integration.test_rate_limiting_integration.TestRateLimitingIntegration" name="test_health_endpoint_no_rate_limit" time="4.800" /><testcase classname="tests.integration.test_api_endpoints.TestSystemEndpoints" name="test_system_health_endpoint" time="4.590" /><testcase classname="tests.integration.test_mock_replacement_demo.TestMockReplacementDemo" name="test_complete_rag_pipeline_no_mocks" time="0.162"><failure message="src.services.enhanced_rag_service.RAGIndexError: Index file verification failed after copy">tests\integration\test_mock_replacement_demo.py:234: in test_complete_rag_pipeline_no_mocks
    vector_index = self.rag_service.build_index_from_document(document)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src\services\enhanced_rag_service.py:444: in build_index_from_document
    return self._build_index_with_recovery(
src\services\enhanced_rag_service.py:541: in _build_index_with_recovery
    self._copy_index_files_with_retry(temp_dir_path, vector_index_path)
src\services\enhanced_rag_service.py:616: in _copy_index_files_with_retry
    copy_files()
src\services\error_recovery.py:100: in wrapper
    return self._execute_with_retry(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src\services\error_recovery.py:111: in _execute_with_retry
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
src\services\enhanced_rag_service.py:614: in copy_files
    raise RAGIndexError("Index file verification failed after copy")
E   src.services.enhanced_rag_service.RAGIndexError: Index file verification failed after copy</failure></testcase><testcase classname="tests.integration.test_citation_simple_integration.TestSimpleCitationIntegration" name="test_citation_parsing_and_storage" time="0.037"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_simple_integration.py:32: in test_db
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_integration.TestCitationSystemIntegration" name="test_complete_citation_extraction_workflow" time="0.143"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_integration.py:55: in test_database
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_simple_integration.TestSimpleCitationIntegration" name="test_citation_service_integration" time="0.026"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_simple_integration.py:32: in test_db
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_integration.TestCitationSystemIntegration" name="test_citation_parsing_quality_metrics" time="0.001"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_integration.py:55: in test_database
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_simple_integration.TestSimpleCitationIntegration" name="test_parsing_quality_validation" time="0.026"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_simple_integration.py:32: in test_db
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_integration.TestCitationSystemIntegration" name="test_database_transaction_integrity" time="0.001"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_integration.py:55: in test_database
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_integration.TestCitationSystemIntegration" name="test_concurrent_citation_operations" time="0.001"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_integration.py:55: in test_database
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_simple_integration.TestSimpleCitationIntegration" name="test_error_handling_integration" time="0.030"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_simple_integration.py:32: in test_db
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_integration.TestCitationSystemIntegration" name="test_system_performance_benchmarks" time="0.001"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_integration.py:55: in test_database
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_citation_simple_integration.TestSimpleCitationIntegration" name="test_component_modularity" time="0.026"><error message="failed on setup with &quot;src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']&quot;">src\database\modular_migrator.py:104: in migrate
    raise MigrationError(f"Migration failed: {error_msg}")
E   src.database.migrations.base.MigrationError: Migration failed: Migration validation failed: ['No migrations available']

The above exception was the direct cause of the following exception:
tests\integration\test_citation_simple_integration.py:32: in test_db
    migrator.migrate()
src\database\modular_migrator.py:108: in migrate
    raise MigrationError(f"Migration failed: {e}") from e
E   src.database.migrations.base.MigrationError: Migration failed: Migration failed: Migration validation failed: ['No migrations available']</error></testcase><testcase classname="tests.integration.test_mock_replacement_demo.TestMockReplacementDemo" name="test_mock_vs_real_comparison" time="0.096" /><testcase classname="tests.integration.test_mock_replacement_demo.TestMockReplacementDemo" name="test_performance_benchmarks_real_vs_theoretical" time="0.096"><failure message="src.services.enhanced_rag_service.RAGIndexError: Index file verification failed after copy">tests\integration\test_mock_replacement_demo.py:436: in test_performance_benchmarks_real_vs_theoretical
    vector_index = self.rag_service.build_index_from_document(document)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src\services\enhanced_rag_service.py:444: in build_index_from_document
    return self._build_index_with_recovery(
src\services\enhanced_rag_service.py:541: in _build_index_with_recovery
    self._copy_index_files_with_retry(temp_dir_path, vector_index_path)
src\services\enhanced_rag_service.py:616: in _copy_index_files_with_retry
    copy_files()
src\services\error_recovery.py:100: in wrapper
    return self._execute_with_retry(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src\services\error_recovery.py:111: in _execute_with_retry
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
src\services\enhanced_rag_service.py:614: in copy_files
    raise RAGIndexError("Index file verification failed after copy")
E   src.services.enhanced_rag_service.RAGIndexError: Index file verification failed after copy</failure></testcase><testcase classname="tests.integration.test_real_pdf_processing.TestRealPDFProcessing" name="test_real_pdf_import_and_text_extraction" time="0.113"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied&quot;">tests\integration\test_real_pdf_processing.py:40: in setup_class
    cls.academic_fixtures = cls.academic_generator.create_all_academic_fixtures()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\academic_pdf_generator.py:271: in create_all_academic_fixtures
    self.create_computer_vision_paper()
tests\fixtures\academic_pdf_generator.py:189: in create_computer_vision_paper
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied</error></testcase><testcase classname="tests.integration.test_real_document_library.TestRealDocumentLibrary" name="test_import_real_academic_papers" time="0.009"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists&quot;">tests\integration\test_real_document_library.py:50: in setup_class
    cls.basic_fixtures = cls.pdf_generator.create_all_fixtures()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\pdf_fixtures.py:270: in create_all_fixtures
    self.create_simple_text_pdf()
tests\fixtures\pdf_fixtures.py:52: in create_simple_text_pdf
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists</error></testcase><testcase classname="tests.integration.test_real_pdf_processing.TestRealPDFProcessing" name="test_real_pdf_content_hash_deduplication" time="0.001"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied&quot;">tests\integration\test_real_pdf_processing.py:40: in setup_class
    cls.academic_fixtures = cls.academic_generator.create_all_academic_fixtures()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\academic_pdf_generator.py:271: in create_all_academic_fixtures
    self.create_computer_vision_paper()
tests\fixtures\academic_pdf_generator.py:189: in create_computer_vision_paper
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied</error></testcase><testcase classname="tests.integration.test_api_endpoints.TestSystemEndpoints" name="test_system_config_endpoint" time="0.012" /><testcase classname="tests.integration.test_api_endpoints.TestSystemEndpoints" name="test_system_version_endpoint" time="0.009" /><testcase classname="tests.integration.test_api_endpoints.TestSystemEndpoints" name="test_system_info_endpoint" time="0.010" /><testcase classname="tests.integration.test_api_endpoints.TestSystemEndpoints" name="test_system_storage_endpoint" time="0.012" /><testcase classname="tests.integration.test_real_document_library.TestRealDocumentLibrary" name="test_real_duplicate_detection_by_content_hash" time="0.001"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists&quot;">tests\integration\test_real_document_library.py:50: in setup_class
    cls.basic_fixtures = cls.pdf_generator.create_all_fixtures()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\pdf_fixtures.py:270: in create_all_fixtures
    self.create_simple_text_pdf()
tests\fixtures\pdf_fixtures.py:52: in create_simple_text_pdf
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists</error></testcase><testcase classname="tests.integration.test_api_endpoints.TestSystemEndpoints" name="test_system_initialize_endpoint" time="0.021" /><testcase classname="tests.integration.test_api_endpoints.TestSystemEndpoints" name="test_system_maintenance_endpoint" time="0.009" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_documents_list_endpoint" time="0.017" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_documents_list_with_parameters" time="0.035" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_document_upload_endpoint" time="0.015" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_document_upload_invalid_file" time="0.014" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_document_detail_endpoint" time="0.013" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_document_update_endpoint" time="0.016" /><testcase classname="tests.integration.test_rate_limiting_integration.TestRateLimitingIntegration" name="test_rate_limit_headers_present" time="0.012" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_document_delete_endpoint" time="0.014" /><testcase classname="tests.integration.test_rate_limiting_integration.TestRateLimitingIntegration" name="test_different_endpoints_different_limits" time="0.080" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_document_download_endpoint" time="0.013" /><testcase classname="tests.integration.test_api_endpoints.TestDocumentEndpoints" name="test_document_integrity_endpoint" time="0.012" /><testcase classname="tests.integration.test_api_endpoints.TestLibraryEndpoints" name="test_library_stats_endpoint" time="0.014" /><testcase classname="tests.integration.test_api_endpoints.TestLibraryEndpoints" name="test_library_duplicates_endpoint" time="0.014" /><testcase classname="tests.integration.test_api_endpoints.TestLibraryEndpoints" name="test_library_cleanup_endpoint" time="0.013" /><testcase classname="tests.integration.test_rate_limiting_integration.TestRateLimitingIntegration" name="test_rate_limiting_monitoring_integration" time="0.009" /><testcase classname="tests.integration.test_api_endpoints.TestLibraryEndpoints" name="test_library_health_endpoint" time="0.014" /><testcase classname="tests.integration.test_rate_limiting_integration.TestRateLimitingIntegration" name="test_bypass_functionality" time="0.012" /><testcase classname="tests.integration.test_api_endpoints.TestLibraryEndpoints" name="test_library_optimize_endpoint" time="0.061" /><testcase classname="tests.integration.test_rate_limiting_integration.TestRateLimitingIntegration" name="test_rate_limiting_with_monitoring" time="0.058" /><testcase classname="tests.integration.test_api_endpoints.TestLibraryEndpoints" name="test_library_search_endpoint" time="0.031" /><testcase classname="tests.integration.test_rate_limiting_integration" name="test_rate_limiting_system_health" time="0.002" /><testcase classname="tests.integration.test_api_endpoints.TestLibraryEndpoints" name="test_library_recent_endpoint" time="0.027" /><testcase classname="tests.integration.test_api_endpoints.TestRAGEndpoints" name="test_rag_query_endpoint" time="0.028" /><testcase classname="tests.integration.test_api_endpoints.TestRAGEndpoints" name="test_rag_build_index_endpoint" time="0.015" /><testcase classname="tests.integration.test_api_endpoints.TestRAGEndpoints" name="test_rag_status_endpoint" time="0.009" /><testcase classname="tests.integration.test_api_endpoints.TestSettingsEndpoints" name="test_settings_get_endpoint" time="0.009"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\integration\test_api_endpoints.py:618: in test_settings_get_endpoint
    assert response.status_code == 200
E   assert 404 == 200
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.integration.test_api_endpoints.TestSettingsEndpoints" name="test_settings_save_endpoint" time="0.013"><failure message="assert 404 in [200, 400, 422]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\integration\test_api_endpoints.py:652: in test_settings_save_endpoint
    assert response.status_code in [200, 400, 422]
E   assert 404 in [200, 400, 422]
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.integration.test_api_endpoints.TestErrorHandling" name="test_404_endpoints" time="0.022"><failure message="assert 400 == 404&#10; +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code">tests\integration\test_api_endpoints.py:689: in test_404_endpoints
    assert response.status_code == 404
E   assert 400 == 404
E    +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code</failure></testcase><testcase classname="tests.integration.test_api_endpoints.TestErrorHandling" name="test_method_not_allowed" time="0.015" /><testcase classname="tests.integration.test_api_endpoints.TestErrorHandling" name="test_malformed_json_handling" time="0.009"><failure message="assert 404 in [400, 422]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\integration\test_api_endpoints.py:711: in test_malformed_json_handling
    assert response.status_code in [400, 422]
E   assert 404 in [400, 422]
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.integration.test_api_endpoints.TestErrorHandling" name="test_large_request_handling" time="0.067"><failure message="assert 404 in [200, 400, 413, 422]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\integration\test_api_endpoints.py:721: in test_large_request_handling
    assert response.status_code in [200, 400, 413, 422]
E   assert 404 in [200, 400, 413, 422]
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.integration.test_real_pdf_processing.TestRealPDFProcessing" name="test_real_pdf_rag_index_building" time="0.001"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied&quot;">tests\integration\test_real_pdf_processing.py:40: in setup_class
    cls.academic_fixtures = cls.academic_generator.create_all_academic_fixtures()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\academic_pdf_generator.py:271: in create_all_academic_fixtures
    self.create_computer_vision_paper()
tests\fixtures\academic_pdf_generator.py:189: in create_computer_vision_paper
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied</error></testcase><testcase classname="tests.integration.test_real_document_library.TestRealDocumentLibrary" name="test_real_file_hash_vs_content_hash_difference" time="0.001"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists&quot;">tests\integration\test_real_document_library.py:50: in setup_class
    cls.basic_fixtures = cls.pdf_generator.create_all_fixtures()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\pdf_fixtures.py:270: in create_all_fixtures
    self.create_simple_text_pdf()
tests\fixtures\pdf_fixtures.py:52: in create_simple_text_pdf
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists</error></testcase><testcase classname="tests.integration.test_real_pdf_processing.TestRealPDFProcessing" name="test_real_pdf_rag_query_processing" time="0.001"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied&quot;">tests\integration\test_real_pdf_processing.py:40: in setup_class
    cls.academic_fixtures = cls.academic_generator.create_all_academic_fixtures()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\academic_pdf_generator.py:271: in create_all_academic_fixtures
    self.create_computer_vision_paper()
tests\fixtures\academic_pdf_generator.py:189: in create_computer_vision_paper
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied</error></testcase><testcase classname="tests.integration.test_real_document_library.TestRealDocumentLibrary" name="test_real_pdf_metadata_extraction" time="0.001"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists&quot;">tests\integration\test_real_document_library.py:50: in setup_class
    cls.basic_fixtures = cls.pdf_generator.create_all_fixtures()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\pdf_fixtures.py:270: in create_all_fixtures
    self.create_simple_text_pdf()
tests\fixtures\pdf_fixtures.py:52: in create_simple_text_pdf
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists</error></testcase><testcase classname="tests.integration.test_real_pdf_processing.TestRealPDFProcessing" name="test_citation_extraction_from_real_academic_papers" time="0.002"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied&quot;">tests\integration\test_real_pdf_processing.py:40: in setup_class
    cls.academic_fixtures = cls.academic_generator.create_all_academic_fixtures()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\academic_pdf_generator.py:271: in create_all_academic_fixtures
    self.create_computer_vision_paper()
tests\fixtures\academic_pdf_generator.py:189: in create_computer_vision_paper
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot remove file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\academic\cv_research_sample.pdf': Permission denied</error></testcase><testcase classname="tests.integration.test_real_document_library.TestRealDocumentLibrary" name="test_real_library_statistics_calculation" time="0.001"><error message="failed on setup with &quot;pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists&quot;">tests\integration\test_real_document_library.py:50: in setup_class
    cls.basic_fixtures = cls.pdf_generator.create_all_fixtures()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests\fixtures\pdf_fixtures.py:270: in create_all_fixtures
    self.create_simple_text_pdf()
tests\fixtures\pdf_fixtures.py:52: in create_simple_text_pdf
    doc.save(str(pdf_path))
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\__init__.py:5650: in save
    mupdf.pdf_save_document(pdf, filename, opts)
C:\Users\k7407\AppData\Roaming\Python\Python313\site-packages\pymupdf\mupdf.py:55230: in pdf_save_document
    return _mupdf.pdf_save_document(doc, filename, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   pymupdf.mupdf.FzErrorSystem: code=2: cannot open file 'E:\Code\ai_enhanced_pdf_scholar\tests\fixtures\pdfs\simple_text.pdf': File exists</error></testcase></testsuite></testsuites>