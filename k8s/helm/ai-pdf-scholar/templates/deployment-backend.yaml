{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ai-pdf-scholar.fullname" . }}-backend
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ai-pdf-scholar.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "ai-pdf-scholar.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ai-pdf-scholar.backend.selectorLabels" . | nindent 8 }}
        version: {{ .Chart.AppVersion | quote }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.backend.service.metricsPort | quote }}
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ include "ai-pdf-scholar.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      initContainers:
      {{- if .Values.postgresql.enabled }}
      - name: wait-for-db
        image: postgres:15-alpine
        command:
        - /bin/bash
        - -c
        - |
          until pg_isready -h {{ include "ai-pdf-scholar.postgresql.fullname" . }} -p 5432 -U {{ .Values.postgresql.auth.username }}; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "ai-pdf-scholar.secretName" . }}
              key: POSTGRES_PASSWORD
      {{- end }}
      {{- if .Values.redis.enabled }}
      - name: wait-for-redis
        image: redis:7-alpine
        command:
        - /bin/bash
        - -c
        - |
          until redis-cli -h {{ include "ai-pdf-scholar.redis.fullname" . }} -p 6379 ping; do
            echo "Waiting for Redis..."
            sleep 2
          done
          echo "Redis is ready!"
      {{- end }}
      - name: db-migration
        image: {{ include "ai-pdf-scholar.backend.image" . }}
        command:
        - /bin/bash
        - -c
        - |
          echo "Running database migrations..."
          python -m alembic upgrade head
          echo "Migrations completed!"
        envFrom:
        - configMapRef:
            name: {{ include "ai-pdf-scholar.configmapName" . }}
        - secretRef:
            name: {{ include "ai-pdf-scholar.secretName" . }}
        {{- if .Values.persistence.uploads.enabled }}
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        {{- end }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      containers:
      - name: backend
        image: {{ include "ai-pdf-scholar.backend.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.backend.service.port }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.backend.service.metricsPort }}
          protocol: TCP
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom:
        - configMapRef:
            name: {{ include "ai-pdf-scholar.configmapName" . }}
        - secretRef:
            name: {{ include "ai-pdf-scholar.secretName" . }}
        {{- if .Values.persistence.uploads.enabled }}
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        {{- end }}
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      volumes:
      {{- if .Values.persistence.uploads.enabled }}
      - name: uploads
        persistentVolumeClaim:
          claimName: {{ include "ai-pdf-scholar.fullname" . }}-uploads
      {{- end }}
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}