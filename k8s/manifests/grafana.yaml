# ============================================================================
# Grafana Deployment for Monitoring Visualization
# Production-ready setup with dashboard provisioning
# ============================================================================

apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
---
# Grafana Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true

    [grafana_net]
    url = https://grafana.net

    [log]
    mode = console
    level = info

    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

    [server]
    protocol = http
    http_port = 3000
    domain = localhost
    enforce_domain = false
    root_url = %(protocol)s://%(domain)s:%(http_port)s/
    serve_from_sub_path = false

    [database]
    type = sqlite3
    host = 127.0.0.1:3306
    name = grafana
    user = root
    password =
    url =
    ssl_mode = disable
    path = /var/lib/grafana/grafana.db

    [session]
    provider = file
    provider_config = sessions
    cookie_name = grafana_sess
    cookie_secure = false
    session_life_time = 86400

    [dataproxy]
    logging = false

    [security]
    admin_user = admin
    admin_password = ${GF_SECURITY_ADMIN_PASSWORD}
    secret_key = ${GF_SECURITY_SECRET_KEY}
    login_remember_days = 7
    cookie_username = grafana_user
    cookie_remember_name = grafana_remember
    disable_gravatar = false
    data_source_proxy_whitelist =

    [users]
    allow_sign_up = false
    allow_org_create = false
    auto_assign_org = true
    auto_assign_org_role = Viewer
    default_theme = dark

    [auth]
    disable_login_form = false

    [auth.anonymous]
    enabled = false
    org_name = Main Org.
    org_role = Viewer

    [auth.github]
    enabled = false

    [auth.google]
    enabled = false

    [auth.ldap]
    enabled = false

    [smtp]
    enabled = false

    [emails]
    welcome_email_on_sign_up = false

    [alerting]
    enabled = true
    execute_alerts = true

    [explore]
    enabled = true

    [metrics]
    enabled = true
    interval_seconds = 10

    [tracing.jaeger]
    address = jaeger-query:16686

    [feature_toggles]
    enable = publicDashboards
---
# Grafana Datasource Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  datasources.yaml: |
    apiVersion: 1

    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      basicAuth: false
      isDefault: true
      editable: true
      jsonData:
        timeInterval: 30s
        queryTimeout: 60s
        httpMethod: POST
        manageAlerts: true
        prometheusType: Prometheus
        prometheusVersion: 2.45.0
        cacheLevel: 'High'
        disableMetricsLookup: false
        exemplarTraceIdDestinations:
          - name: trace_id
            datasourceUid: jaeger

    - name: Elasticsearch
      type: elasticsearch
      access: proxy
      url: http://elasticsearch:9200
      database: "logs-*"
      basicAuth: false
      editable: true
      jsonData:
        interval: Daily
        timeField: "@timestamp"
        esVersion: "8.11.0"
        includeFrozen: false
        logMessageField: message
        logLevelField: log_level
        maxConcurrentShardRequests: 5

    - name: Jaeger
      type: jaeger
      access: proxy
      url: http://jaeger-query:16686
      basicAuth: false
      editable: true
      uid: jaeger
      jsonData:
        tracesToLogs:
          datasourceUid: 'loki'
          tags: ['job', 'instance', 'pod', 'namespace']
          mappedTags: [{ key: 'service.name', value: 'service' }]
          mapTagNamesEnabled: false
          spanStartTimeShift: '-1h'
          spanEndTimeShift: '1h'
          filterByTraceID: false
          filterBySpanID: false
---
# Grafana Dashboard Providers
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1

    providers:
    - name: 'ai-pdf-scholar-dashboards'
      orgId: 1
      folder: 'AI PDF Scholar'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 30
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards/ai-pdf-scholar

    - name: 'infrastructure-dashboards'
      orgId: 1
      folder: 'Infrastructure'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 30
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards/infrastructure

    - name: 'security-dashboards'
      orgId: 1
      folder: 'Security'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 30
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards/security
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: monitoring
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      serviceAccountName: grafana
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      initContainers:
      - name: dashboard-setup
        image: busybox:1.35
        command: ['sh', '-c', 'mkdir -p /var/lib/grafana/dashboards/ai-pdf-scholar /var/lib/grafana/dashboards/infrastructure /var/lib/grafana/dashboards/security']
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: admin-password
        - name: GF_SECURITY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: secret-key
        - name: GF_INSTALL_PLUGINS
          value: "grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel"
        volumeMounts:
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboard-providers
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: dashboard-application-performance
          mountPath: /var/lib/grafana/dashboards/ai-pdf-scholar/application-performance.json
          subPath: application-performance.json
        - name: dashboard-infrastructure-health
          mountPath: /var/lib/grafana/dashboards/infrastructure/infrastructure-health.json
          subPath: infrastructure-health.json
        - name: dashboard-business-metrics
          mountPath: /var/lib/grafana/dashboards/ai-pdf-scholar/business-metrics.json
          subPath: business-metrics.json
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 1
      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboard-providers
        configMap:
          name: grafana-dashboard-providers
      - name: dashboard-application-performance
        configMap:
          name: dashboard-application-performance
      - name: dashboard-infrastructure-health
        configMap:
          name: dashboard-infrastructure-health
      - name: dashboard-business-metrics
        configMap:
          name: dashboard-business-metrics
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-storage
---
# Grafana PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 10Gi
---
# Dashboard ConfigMaps
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-application-performance
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  application-performance.json: |
    {
      "dashboard": {
        "id": null,
        "title": "AI PDF Scholar - Application Performance",
        "tags": ["ai-pdf-scholar", "application", "performance"],
        "style": "dark",
        "timezone": "browser",
        "refresh": "30s",
        "schemaVersion": 16,
        "version": 1,
        "time": {
          "from": "now-1h",
          "to": "now"
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-infrastructure-health
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  infrastructure-health.json: |
    {
      "dashboard": {
        "id": null,
        "title": "AI PDF Scholar - Infrastructure Health",
        "tags": ["ai-pdf-scholar", "infrastructure", "health"],
        "style": "dark",
        "timezone": "browser",
        "refresh": "30s"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-business-metrics
  namespace: ai-pdf-scholar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  business-metrics.json: |
    {
      "dashboard": {
        "id": null,
        "title": "AI PDF Scholar - Business Metrics",
        "tags": ["ai-pdf-scholar", "business", "metrics"],
        "style": "dark",
        "timezone": "browser",
        "refresh": "1m"
      }
    }