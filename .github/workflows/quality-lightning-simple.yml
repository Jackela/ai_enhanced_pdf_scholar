name: ⚡ Quality Lightning (Simple)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:
    inputs:
      frontend-changed:
        required: false
        type: string
        default: 'true'
      backend-changed:
        required: false
        type: string
        default: 'true'
      force-full:
        required: false
        type: string
        default: 'true'

env:
  NODE_VERSION: '22.17.0'
  PYTHON_VERSION: '3.11'

jobs:
  # 🐍 Python 基础质量检查 (简化版)
  python-quality-simple:
    name: 🐍 Python Quality (Simple)
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.event_name == 'push' || github.event_name == 'pull_request' || inputs.backend-changed == 'true' || inputs.force-full == 'true'
    steps:
      - name: 📥 Checkout with Git Cache
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone for faster checkout

      - name: 🐍 Setup Python with Enhanced Caching
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            requirements*.txt
            pyproject.toml

      - name: 📦 Install Basic Dependencies with Cache
        run: |
          python -m pip install --upgrade pip
          pip install ruff
        timeout-minutes: 1

      - name: 🔍 Basic Ruff Check (Critical Errors Only)
        run: |
          echo "🎯 Running critical error check (import errors, undefined variables)..."
          ruff check src --select=F821,F401,F841 --line-length=88 --output-format=github
        timeout-minutes: 1

  # 🧪 基础测试 (简化版)
  basic-tests:
    name: 🧪 Basic Tests
    runs-on: ubuntu-latest
    timeout-minutes: 8
    if: github.event_name == 'push' || github.event_name == 'pull_request' || inputs.backend-changed == 'true' || inputs.force-full == 'true'
    steps:
      - name: 📥 Checkout with Git Cache
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone for faster checkout

      - name: 🐍 Setup Python with Enhanced Caching
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            requirements*.txt
            pyproject.toml

      - name: 📦 Install Test Dependencies
        run: |
          python -m pip install --upgrade pip
          # Install only essential dependencies for basic tests
          pip install pytest pytest-cov PyMuPDF>=1.26.0 pydantic>=2.11.0 fastapi>=0.116.0 aiofiles>=23.0.0
          echo "✅ Installed core testing dependencies only"
        timeout-minutes: 3

      - name: 🧪 Run Basic Tests (25% coverage)
        run: |
          pytest tests/integration/test_citation_simple_integration.py tests/test_citation_repositories.py tests/repositories/test_base_repository.py -v --cov=src --cov-report=xml --cov-fail-under=25 --override-ini="addopts="
        timeout-minutes: 5

  # 📋 简单质量门控
  quality-gate-simple:
    name: 📋 Quality Gate (Simple)
    runs-on: ubuntu-latest
    needs: [python-quality-simple, basic-tests]
    if: always()
    timeout-minutes: 1
    steps:
      - name: 🎯 Simple Quality Decision
        run: |
          # 检查是否有实际的失败
          failed_count=0
          
          [[ "${{ needs.python-quality-simple.result }}" == "failure" ]] && ((failed_count++))
          [[ "${{ needs.basic-tests.result }}" == "failure" ]] && ((failed_count++))
          
          echo "Simple quality gate analysis:"
          echo "- Python Quality: ${{ needs.python-quality-simple.result }}"
          echo "- Basic Tests: ${{ needs.basic-tests.result }}"
          echo "- Failed jobs: $failed_count"
          
          if [ $failed_count -gt 0 ]; then
            echo "❌ Simple quality gate failed."
            exit 1
          else
            echo "✅ Simple quality gate passed!"
          fi