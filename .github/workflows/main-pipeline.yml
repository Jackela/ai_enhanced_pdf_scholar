name: 🚀 Revolutionary CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_full_pipeline:
        description: 'Force run all stages regardless of changes'
        required: false
        default: false
        type: boolean

# 全局环境变量
env:
  NODE_VERSION: '22.17.0'
  PYTHON_VERSION: '3.11'
  PNPM_VERSION: '9.15.1'
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

# 全局并发控制
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 🔍 智能变更检测
  detect-changes:
    name: 🔍 Smart Change Detection
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
      docs-changed: ${{ steps.changes.outputs.docs }}
      config-changed: ${{ steps.changes.outputs.config }}
      security-changed: ${{ steps.changes.outputs.security }}
      force-full: ${{ github.event.inputs.force_full_pipeline == 'true' }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Detect Changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
              - 'package*.json'
              - 'vite.config.ts'
              - 'tsconfig.json'
            backend:
              - 'src/**'
              - 'pyproject.toml'
              - 'poetry.lock'
              - 'requirements*.txt'
            docs:
              - 'docs/**'
              - '*.md'
              - 'CLAUDE.md'
            config:
              - '.github/**'
              - 'docker-compose*.yml'
              - 'Dockerfile*'
            security:
              - '.github/workflows/security-*.yml'
              - 'poetry.lock'
              - 'package-lock.json'
              - 'requirements*.txt'

  # ⚡ 阶段1: 闪电质量检查 (90秒) - 使用经过验证的简化版本
  quality-lightning:
    name: ⚡ Quality Lightning
    needs: detect-changes
    if: |
      always() && 
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/quality-lightning-simple.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 🔍 阶段2C: 增强质量分析 (8分钟) - 重新启用增强版本
  quality-enhanced:
    name: 🔍 Quality Enhanced
    needs: [detect-changes, quality-lightning]
    if: |
      always() && 
      needs.quality-lightning.result == 'success' &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/quality-enhanced.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 🔧 阶段2: 优化构建 (6分钟) - 重新启用优化版本
  build-optimized:
    name: 🔧 Optimized Build
    needs: [detect-changes, quality-enhanced]
    if: |
      always() && 
      needs.quality-enhanced.result == 'success' &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/build-optimized.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 🧪 阶段3: 优化测试 (8分钟) - 重新启用优化版本
  test-optimized:
    name: 🧪 Optimized Testing
    needs: [detect-changes, build-optimized]
    if: |
      always() && 
      needs.build-optimized.result == 'success' &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/test-optimized.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 🔗 阶段4: 集成验证 (12分钟) - 重新启用集成测试
  integration-validation:
    name: 🔗 Integration Validation
    needs: [detect-changes, test-optimized]
    if: |
      always() && 
      needs.test-optimized.result == 'success' &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/integration-validation.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 🔒 阶段3B: 高级安全扫描 (12分钟) - Phase 3B实施
  security-advanced:
    name: 🔒 Security Advanced
    needs: [detect-changes, integration-validation]
    if: |
      always() && 
      needs.integration-validation.result == 'success' &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.security-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/security-advanced.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 📊 阶段3A: 高级性能基准测试 (10分钟) - Phase 3A实施
  performance-advanced:
    name: 📊 Performance Advanced
    needs: [detect-changes, integration-validation]
    if: |
      always() && 
      needs.integration-validation.result == 'success' &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/performance-advanced.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 🚀 阶段3C: 高级部署自动化 (15分钟) - Phase 3C实施
  deployment-advanced:
    name: 🚀 Deployment Advanced
    needs: [detect-changes, security-advanced, performance-advanced]
    if: |
      always() && 
      (needs.security-advanced.result == 'success' || needs.security-advanced.result == 'skipped') &&
      (needs.performance-advanced.result == 'success' || needs.performance-advanced.result == 'skipped') &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/deployment-advanced.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
      environment: 'staging'
    secrets: inherit

  # 🔄 阶段3D: 高级E2E验证 (18分钟) - Phase 3D实施
  e2e-advanced:
    name: 🔄 E2E Advanced
    needs: [detect-changes, deployment-advanced]
    if: |
      always() && 
      (needs.deployment-advanced.result == 'success' || needs.deployment-advanced.result == 'skipped') &&
      (needs.detect-changes.outputs.frontend-changed == 'true' || 
       needs.detect-changes.outputs.backend-changed == 'true' ||
       needs.detect-changes.outputs.force-full == 'true')
    uses: ./.github/workflows/e2e-advanced.yml
    with:
      frontend-changed: ${{ needs.detect-changes.outputs.frontend-changed }}
      backend-changed: ${{ needs.detect-changes.outputs.backend-changed }}
      force-full: ${{ needs.detect-changes.outputs.force-full }}
    secrets: inherit

  # 📈 最终状态报告 - 完整Phase 3版本
  pipeline-status:
    name: 📈 Pipeline Status Report
    runs-on: ubuntu-latest
    needs: [detect-changes, quality-lightning, quality-enhanced, build-optimized, test-optimized, integration-validation, security-advanced, performance-advanced, deployment-advanced, e2e-advanced]
    if: always()
    timeout-minutes: 3
    steps:
      - name: 📊 Generate Status Report
        run: |
          echo "# 🚀 CI/CD Pipeline Status Report (Phase 3)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📋 Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status | Duration | Phase |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|---------|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Change Detection | ${{ needs.detect-changes.result }} | - | Core |" >> $GITHUB_STEP_SUMMARY
          echo "| ⚡ Quality Lightning | ${{ needs.quality-lightning.result }} | ~30s | 1 |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Quality Enhanced | ${{ needs.quality-enhanced.result }} | ~8m | 2C |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔧 Build (Optimized) | ${{ needs.build-optimized.result }} | ~6m | 2A |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Test (Optimized) | ${{ needs.test-optimized.result }} | ~8m | 2B |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔗 Integration Validation | ${{ needs.integration-validation.result }} | ~12m | 2D |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔒 Security (Advanced) | ${{ needs.security-advanced.result }} | ~12m | 3B |" >> $GITHUB_STEP_SUMMARY
          echo "| 📊 Performance (Advanced) | ${{ needs.performance-advanced.result }} | ~10m | 3A |" >> $GITHUB_STEP_SUMMARY
          echo "| 🚀 Deployment (Advanced) | ${{ needs.deployment-advanced.result }} | ~15m | 3C |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔄 E2E (Advanced) | ${{ needs.e2e-advanced.result }} | ~18m | 3D |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔍 Change Detection Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend Changed: ${{ needs.detect-changes.outputs.frontend-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend Changed: ${{ needs.detect-changes.outputs.backend-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security Changed: ${{ needs.detect-changes.outputs.security-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Force Full Pipeline: ${{ needs.detect-changes.outputs.force-full }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Performance Metrics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Estimated Duration**: ~90-100 minutes (Complete Phase 3)" >> $GITHUB_STEP_SUMMARY
          echo "- **Core Pipeline**: ~35 minutes (Phase 2A-2D)" >> $GITHUB_STEP_SUMMARY
          echo "- **Advanced Analysis**: ~22 minutes (Phase 3A+3B)" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment & E2E**: ~33 minutes (Phase 3C+3D)" >> $GITHUB_STEP_SUMMARY
          echo "- **Parallel Execution**: ✅ Enabled" >> $GITHUB_STEP_SUMMARY
          echo "- **Smart Caching**: ✅ Enhanced" >> $GITHUB_STEP_SUMMARY
          echo "- **Incremental Processing**: ✅ Optimized" >> $GITHUB_STEP_SUMMARY
          
          # 设置整体状态 - Phase 3 检查完整高级流程
          core_success=false
          advanced_success=false
          
          # Check core pipeline (Phase 2)
          if [[ "${{ needs.quality-lightning.result }}" == "success" && 
                ("${{ needs.quality-enhanced.result }}" == "success" || "${{ needs.quality-enhanced.result }}" == "skipped") && 
                ("${{ needs.build-optimized.result }}" == "success" || "${{ needs.build-optimized.result }}" == "skipped") && 
                ("${{ needs.test-optimized.result }}" == "success" || "${{ needs.test-optimized.result }}" == "skipped") && 
                ("${{ needs.integration-validation.result }}" == "success" || "${{ needs.integration-validation.result }}" == "skipped") ]]; then
            core_success=true
          fi
          
          # Check advanced features (Phase 3A-3D)
          if [[ ("${{ needs.security-advanced.result }}" == "success" || "${{ needs.security-advanced.result }}" == "skipped") && 
                ("${{ needs.performance-advanced.result }}" == "success" || "${{ needs.performance-advanced.result }}" == "skipped") &&
                ("${{ needs.deployment-advanced.result }}" == "success" || "${{ needs.deployment-advanced.result }}" == "skipped") &&
                ("${{ needs.e2e-advanced.result }}" == "success" || "${{ needs.e2e-advanced.result }}" == "skipped") ]]; then
            advanced_success=true
          fi
          
          if [[ "$core_success" == true && "$advanced_success" == true ]]; then
            echo "✅ **Pipeline Status: SUCCESS (Phase 3)**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Phase 3 Complete**: Enterprise-grade CI/CD framework fully operational" >> $GITHUB_STEP_SUMMARY
            echo "- **Phase 2 Core**: ✅ All foundational systems operational" >> $GITHUB_STEP_SUMMARY
            echo "- **Phase 3A Performance**: ✅ Advanced monitoring & benchmarking" >> $GITHUB_STEP_SUMMARY
            echo "- **Phase 3B Security**: ✅ Multi-layer security scanning" >> $GITHUB_STEP_SUMMARY
            echo "- **Phase 3C Deployment**: ✅ Automated deployment validation" >> $GITHUB_STEP_SUMMARY
            echo "- **Phase 3D E2E**: ✅ End-to-end system validation" >> $GITHUB_STEP_SUMMARY
            echo "- **Quality Gates**: ✅ Enterprise-grade multi-tier validation" >> $GITHUB_STEP_SUMMARY
            echo "- **Artifact Management**: ✅ Complete lifecycle management" >> $GITHUB_STEP_SUMMARY
          elif [[ "$core_success" == true ]]; then
            echo "⚠️ **Pipeline Status: CORE SUCCESS**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Phase 2 Complete**: Core pipeline operational, advanced features may need attention" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Pipeline Status: FAILED**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Core pipeline issues detected**: Review failed stages" >> $GITHUB_STEP_SUMMARY
          fi