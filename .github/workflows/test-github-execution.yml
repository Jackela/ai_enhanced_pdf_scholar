name: 🔬 GitHub Execution Test

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode to force execution'
        required: false
        default: true
        type: boolean

env:
  NODE_VERSION: '22.17.0'
  PYTHON_VERSION: '3.11'

jobs:
  # 测试GitHub Actions原生条件解析
  github-native-test:
    name: 🔬 GitHub Native Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      force-execution: ${{ github.event.inputs.test_mode == 'true' }}
      timestamp: ${{ steps.timestamp.outputs.value }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ⏱️ Generate Timestamp
        id: timestamp
        run: |
          echo "value=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: 🧪 Test Mode Verification
        run: |
          echo "🔬 GitHub Actions Native Conditional Test"
          echo "Input test_mode: ${{ github.event.inputs.test_mode }}"
          echo "Force execution: ${{ github.event.inputs.test_mode == 'true' }}"
          echo "Timestamp: ${{ steps.timestamp.outputs.value }}"
          
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            echo "✅ Test mode is ACTIVE"
            echo "This means force execution should work"
          else
            echo "⚠️ Test mode is INACTIVE"
            echo "Normal change detection would apply"
          fi

  # 测试强制执行逻辑
  forced-backend-job:
    name: 🐍 Forced Backend Job
    runs-on: ubuntu-latest
    needs: github-native-test
    timeout-minutes: 3
    if: needs.github-native-test.outputs.force-execution == 'true'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔬 Backend Job Execution Proof
        run: |
          echo "🐍 BACKEND JOB IS EXECUTING"
          echo "Force execution: ${{ needs.github-native-test.outputs.force-execution }}"
          echo "Timestamp: ${{ needs.github-native-test.outputs.timestamp }}"
          
          # Verify source code exists
          if [ -d "src" ]; then
            python_files=$(find src -name "*.py" | wc -l)
            echo "✅ Found $python_files Python files"
          else
            echo "❌ No source directory found"
            exit 1
          fi
          
          echo "🎉 Backend job completed successfully!"

      - name: 📊 Create Execution Artifact
        run: |
          mkdir -p /tmp/execution-proof
          echo "Backend Job executed successfully at $(date)" > /tmp/execution-proof/backend-execution.txt
          echo "GitHub Job ID: ${{ github.job }}" >> /tmp/execution-proof/backend-execution.txt
          echo "GitHub Run ID: ${{ github.run_id }}" >> /tmp/execution-proof/backend-execution.txt
          echo "Force Execution: ${{ needs.github-native-test.outputs.force-execution }}" >> /tmp/execution-proof/backend-execution.txt

      - name: 📤 Upload Execution Proof
        uses: actions/upload-artifact@v4
        with:
          name: backend-execution-proof
          path: /tmp/execution-proof/backend-execution.txt
          retention-days: 1

  # 测试强制执行逻辑
  forced-frontend-job:
    name: 🚀 Forced Frontend Job
    runs-on: ubuntu-latest
    needs: github-native-test
    timeout-minutes: 3
    if: needs.github-native-test.outputs.force-execution == 'true'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔬 Frontend Job Execution Proof
        run: |
          echo "🚀 FRONTEND JOB IS EXECUTING"
          echo "Force execution: ${{ needs.github-native-test.outputs.force-execution }}"
          echo "Timestamp: ${{ needs.github-native-test.outputs.timestamp }}"
          
          # Verify frontend code exists
          if [ -d "frontend" ]; then
            echo "✅ Frontend directory exists"
            if [ -f "frontend/package.json" ]; then
              echo "✅ package.json found"
            fi
          else
            echo "❌ No frontend directory found"
            exit 1
          fi
          
          echo "🎉 Frontend job completed successfully!"

      - name: 📊 Create Execution Artifact
        run: |
          mkdir -p /tmp/execution-proof
          echo "Frontend Job executed successfully at $(date)" > /tmp/execution-proof/frontend-execution.txt
          echo "GitHub Job ID: ${{ github.job }}" >> /tmp/execution-proof/frontend-execution.txt
          echo "GitHub Run ID: ${{ github.run_id }}" >> /tmp/execution-proof/frontend-execution.txt
          echo "Force Execution: ${{ needs.github-native-test.outputs.force-execution }}" >> /tmp/execution-proof/frontend-execution.txt

      - name: 📤 Upload Execution Proof
        uses: actions/upload-artifact@v4
        with:
          name: frontend-execution-proof
          path: /tmp/execution-proof/frontend-execution.txt
          retention-days: 1

  # 最终验证报告
  execution-report:
    name: 📋 Execution Report
    runs-on: ubuntu-latest
    needs: [github-native-test, forced-backend-job, forced-frontend-job]
    if: always()
    timeout-minutes: 2
    steps:
      - name: 📋 Generate GitHub Execution Report
        run: |
          echo "# 🔬 GitHub Actions Execution Test Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Mode Input**: ${{ github.event.inputs.test_mode }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Force Execution**: ${{ needs.github-native-test.outputs.force-execution }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Timestamp**: ${{ needs.github-native-test.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Job Execution Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status | Force Condition | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|---------|-----------------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔬 GitHub Native Test | ${{ needs.github-native-test.result }} | Always runs | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| 🐍 Forced Backend Job | ${{ needs.forced-backend-job.result }} | force-execution == 'true' | ${{ needs.forced-backend-job.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🚀 Forced Frontend Job | ${{ needs.forced-frontend-job.result }} | force-execution == 'true' | ${{ needs.forced-frontend-job.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Calculate execution rate
          total_jobs=3
          executed_jobs=0
          
          if [ "${{ needs.github-native-test.result }}" = "success" ]; then
            ((executed_jobs++))
          fi
          
          if [ "${{ needs.forced-backend-job.result }}" = "success" ]; then
            ((executed_jobs++))
          fi
          
          if [ "${{ needs.forced-frontend-job.result }}" = "success" ]; then
            ((executed_jobs++))
          fi
          
          execution_rate=$((executed_jobs * 100 / total_jobs))
          
          echo "## Execution Statistics" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Jobs**: $total_jobs" >> $GITHUB_STEP_SUMMARY
          echo "- **Executed Jobs**: $executed_jobs" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Rate**: ${execution_rate}%" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ $execution_rate -eq 100 ]; then
            echo "🎉 **Result: COMPLETE SUCCESS**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Force execution mechanism is working correctly on GitHub Actions!**" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Conditional expressions are parsing properly**" >> $GITHUB_STEP_SUMMARY
            echo "✅ **All jobs executed when test_mode=true**" >> $GITHUB_STEP_SUMMARY
          elif [ $execution_rate -ge 67 ]; then
            echo "⚠️ **Result: PARTIAL SUCCESS**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Most jobs executed, but some issues remain" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Result: EXECUTION FAILED**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Significant problems with force execution mechanism" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo ""
          echo "📋 GitHub Actions execution test completed!"
          echo "📊 Execution Rate: ${execution_rate}%"
          echo "🔬 Native GitHub Actions conditional parsing: ${{ needs.github-native-test.outputs.force-execution }}"