[pytest]
# Optimized Test Configuration for AI Enhanced PDF Scholar
testpaths = tests
python_paths = . src

# Core test execution options - optimized for stability and performance
addopts = 
    --tb=short
    --strict-markers
    --disable-warnings
    --maxfail=5
    -n auto
    --dist=loadfile
    # Coverage options (disabled by default for better performance)
    # Enable with --cov flag when needed
    # --cov=src
    # --cov-report=html:coverage_html
    # --cov-report=term-missing:skip-covered
    # --cov-report=xml:coverage.xml
    # --cov-fail-under=20
    # --cov-config=.coveragerc
    # Exclude known problematic tests during development
    --ignore=tests/services/test_enhanced_rag_service.py
    --ignore=tests/services/test_document_library_service.py
    --ignore=tests/services/test_rag_cache_service.py
    # Exclude security tests with missing dependencies
    --ignore=tests/security/test_penetration_testing.py
    --ignore=tests/security/test_authentication_authorization.py

# Test markers for organization and filtering
markers =
    # Test categories by scope
    unit: Fast unit tests - isolated component testing
    integration: Integration tests - component interaction testing
    e2e: End-to-end tests - full workflow testing
    
    # Test categories by layer
    database: Tests requiring database setup and operations
    services: Service layer tests
    repositories: Repository layer tests
    controllers: Controller layer tests
    
    # Performance and special categories
    performance: Performance benchmark tests
    security: Security-focused tests
    slow: Slow running tests (>1 second)
    resource: Resource monitoring and usage tests
    benchmark: Benchmark performance tests using pytest-benchmark
    asyncio: Async test functions
    
    # CI/CD categories
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    critical: Critical path tests that must always pass

# Python requirements
minversion = 3.10

# Test discovery patterns - optimized
python_files = test_*.py
python_classes = Test* *Test* *Tests
python_functions = test_*

# Logging configuration - optimized for CI/CD
log_cli = false
log_cli_level = WARNING
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = pytest_log.txt
log_file_level = DEBUG

# Timeouts - optimized for stability
timeout = 60
timeout_method = thread

# Performance optimization
cache_dir = .pytest_cache

# Filter warnings to reduce noise
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:pkg_resources.*
    ignore::pytest.PytestUnraisableExceptionWarning