[pytest]
# Test Configuration for AI Enhanced PDF Scholar
testpaths = tests
python_paths = . src
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=src
    --cov-report=html:coverage_html
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-fail-under=50
    -n auto
    --dist=loadfile
    --maxfail=10

markers =
    unit: Unit tests - isolated component testing
    integration: Integration tests - component interaction
    e2e: End-to-end tests - full workflow testing
    slow: Slow running tests
    database: Tests requiring database setup
    services: Service layer tests
    repositories: Repository layer tests
    performance: Performance benchmark tests

# Minimum Python version
minversion = 3.10

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeouts - optimized for faster execution
timeout = 60  # 1 minute per test (reduced from 5 minutes)
timeout_method = thread

# Coverage settings
[coverage:run]
source = src
omit = 
    src/web/static/*
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = coverage_html